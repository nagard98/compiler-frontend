-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParGrammar.y
-----------------------------------------------------------------------------

state 55 contains 1 shift/reduce conflicts.
state 165 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pP -> P                                     (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Double -> L_doubl                                  (3)
	Integer -> L_integ                                 (4)
	String -> L_quoted                                 (5)
	P -> PBlock ListDclBlock BEBlock '.'               (6)
	PBlock -> 'program' Ident ';'                      (7)
	BEBlock -> 'begin' ListBegEndStmt 'end'            (8)
	BegEndStmt -> Stmt ';'                             (9)
	BegEndStmt -> DclBlock                             (10)
	ListBegEndStmt ->                                  (11)
	ListBegEndStmt -> BegEndStmt ListBegEndStmt        (12)
	Stmt -> BEBlock                                    (13)
	Stmt -> LEXPR ':=' REXPR                           (14)
	Stmt -> Call                                       (15)
	Stmt -> SelStmt                                    (16)
	Stmt -> IterStmt                                   (17)
	SelStmt -> 'if' REXPR 'then' Stmt                  (18)
	SelStmt -> 'if' REXPR 'then' Stmt 'else' Stmt      (19)
	IterStmt -> 'while' REXPR 'do' Stmt                (20)
	DclBlock -> PcBlock                                (21)
	DclBlock -> VrBlock                                (22)
	DclBlock -> FcBlock                                (23)
	ListDclBlock ->                                    (24)
	ListDclBlock -> DclBlock ListDclBlock              (25)
	PcBlock -> 'procedure' Ident Prms ';' BEBlock ';'   (26)
	FcBlock -> 'function' Ident Prms ':' Type ';' BEBlock ';'   (27)
	Prms -> '(' ListPrm ')'                            (28)
	Prms ->                                            (29)
	Prm -> ListVRI ':' Type                            (30)
	ListPrm -> Prm                                     (31)
	ListPrm -> Prm ',' ListPrm                         (32)
	Call -> Ident '(' ListREXPR ')'                    (33)
	Call -> ReadDefProc '(' LEXPR ')'                  (34)
	Call -> WriteDefProc '(' REXPR ')'                 (35)
	ListREXPR ->                                       (36)
	ListREXPR -> REXPR                                 (37)
	ListREXPR -> REXPR ',' ListREXPR                   (38)
	VrBlock -> 'var' ListVrDef                         (39)
	VrDef -> ListVRI ':' Type                          (40)
	VRI -> Ident                                       (41)
	ListVRI -> VRI                                     (42)
	ListVRI -> VRI ',' ListVRI                         (43)
	ListVrDef -> VrDef ';'                             (44)
	ListVrDef -> VrDef ';' ListVrDef                   (45)
	Boolean -> 'true'                                  (46)
	Boolean -> 'false'                                 (47)
	Type -> BaseType                                   (48)
	Type -> CompType                                   (49)
	BaseType -> 'integer'                              (50)
	BaseType -> 'boolean'                              (51)
	BaseType -> 'real'                                 (52)
	BaseType -> 'char'                                 (53)
	BaseType -> 'string'                               (54)
	CompType -> 'array' '[' Integer '..' Integer ']' 'of' Type   (55)
	CompType -> '^' BaseType                           (56)
	ReadDefProc -> 'readInt'                           (57)
	ReadDefProc -> 'readChar'                          (58)
	ReadDefProc -> 'readReal'                          (59)
	ReadDefProc -> 'readString'                        (60)
	WriteDefProc -> 'writeInt'                         (61)
	WriteDefProc -> 'writeChar'                        (62)
	WriteDefProc -> 'writeReal'                        (63)
	WriteDefProc -> 'writeString'                      (64)
	REXPR -> REXPR1                                    (65)
	REXPR -> REXPR 'or' REXPR1                         (66)
	REXPR1 -> REXPR2                                   (67)
	REXPR1 -> REXPR1 'and' REXPR2                      (68)
	REXPR2 -> REXPR3                                   (69)
	REXPR2 -> 'not' REXPR3                             (70)
	REXPR3 -> REXPR4                                   (71)
	REXPR3 -> REXPR4 '=' REXPR4                        (72)
	REXPR3 -> REXPR4 '<>' REXPR4                       (73)
	REXPR3 -> REXPR4 '<' REXPR4                        (74)
	REXPR3 -> REXPR4 '<=' REXPR4                       (75)
	REXPR3 -> REXPR4 '>' REXPR4                        (76)
	REXPR3 -> REXPR4 '>=' REXPR4                       (77)
	REXPR4 -> REXPR5                                   (78)
	REXPR4 -> REXPR4 '-' REXPR5                        (79)
	REXPR5 -> REXPR6                                   (80)
	REXPR5 -> REXPR5 '+' REXPR6                        (81)
	REXPR6 -> REXPR7                                   (82)
	REXPR6 -> REXPR6 '/' REXPR7                        (83)
	REXPR7 -> REXPR8                                   (84)
	REXPR7 -> REXPR7 '*' REXPR8                        (85)
	REXPR8 -> REXPR9                                   (86)
	REXPR8 -> REXPR8 'mod' REXPR9                      (87)
	REXPR9 -> REXPR10                                  (88)
	REXPR9 -> '-' REXPR10                              (89)
	REXPR9 -> '@' REXPR10                              (90)
	REXPR9 -> REXPR10 '^'                              (91)
	REXPR10 -> REXPR11                                 (92)
	REXPR10 -> Integer                                 (93)
	REXPR10 -> String                                  (94)
	REXPR10 -> Char                                    (95)
	REXPR10 -> Double                                  (96)
	REXPR10 -> Boolean                                 (97)
	REXPR11 -> REXPR12                                 (98)
	REXPR11 -> Call                                    (99)
	REXPR12 -> '(' REXPR ')'                           (100)
	REXPR12 -> LEXPR                                   (101)
	LEXPR -> BLEXPR                                    (102)
	BLEXPR -> Ident                                    (103)
	BLEXPR -> BLEXPR '[' REXPR ']'                     (104)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'-'            { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	'..'           { PT _ (TS _ 8) }
	'/'            { PT _ (TS _ 9) }
	':'            { PT _ (TS _ 10) }
	':='           { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'<>'           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'@'            { PT _ (TS _ 19) }
	'['            { PT _ (TS _ 20) }
	']'            { PT _ (TS _ 21) }
	'^'            { PT _ (TS _ 22) }
	'and'          { PT _ (TS _ 23) }
	'array'        { PT _ (TS _ 24) }
	'begin'        { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'char'         { PT _ (TS _ 27) }
	'do'           { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'end'          { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'function'     { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'integer'      { PT _ (TS _ 34) }
	'mod'          { PT _ (TS _ 35) }
	'not'          { PT _ (TS _ 36) }
	'of'           { PT _ (TS _ 37) }
	'or'           { PT _ (TS _ 38) }
	'procedure'    { PT _ (TS _ 39) }
	'program'      { PT _ (TS _ 40) }
	'readChar'     { PT _ (TS _ 41) }
	'readInt'      { PT _ (TS _ 42) }
	'readReal'     { PT _ (TS _ 43) }
	'readString'   { PT _ (TS _ 44) }
	'real'         { PT _ (TS _ 45) }
	'string'       { PT _ (TS _ 46) }
	'then'         { PT _ (TS _ 47) }
	'true'         { PT _ (TS _ 48) }
	'var'          { PT _ (TS _ 49) }
	'while'        { PT _ (TS _ 50) }
	'writeChar'    { PT _ (TS _ 51) }
	'writeInt'     { PT _ (TS _ 52) }
	'writeReal'    { PT _ (TS _ 53) }
	'writeString'  { PT _ (TS _ 54) }
	L_Ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pP       rule  0
	Ident           rule  1
	Char            rule  2
	Double          rule  3
	Integer         rule  4
	String          rule  5
	P               rule  6
	PBlock          rule  7
	BEBlock         rule  8
	BegEndStmt      rules 9, 10
	ListBegEndStmt  rules 11, 12
	Stmt            rules 13, 14, 15, 16, 17
	SelStmt         rules 18, 19
	IterStmt        rule  20
	DclBlock        rules 21, 22, 23
	ListDclBlock    rules 24, 25
	PcBlock         rule  26
	FcBlock         rule  27
	Prms            rules 28, 29
	Prm             rule  30
	ListPrm         rules 31, 32
	Call            rules 33, 34, 35
	ListREXPR       rules 36, 37, 38
	VrBlock         rule  39
	VrDef           rule  40
	VRI             rule  41
	ListVRI         rules 42, 43
	ListVrDef       rules 44, 45
	Boolean         rules 46, 47
	Type            rules 48, 49
	BaseType        rules 50, 51, 52, 53, 54
	CompType        rules 55, 56
	ReadDefProc     rules 57, 58, 59, 60
	WriteDefProc    rules 61, 62, 63, 64
	REXPR           rules 65, 66
	REXPR1          rules 67, 68
	REXPR2          rules 69, 70
	REXPR3          rules 71, 72, 73, 74, 75, 76, 77
	REXPR4          rules 78, 79
	REXPR5          rules 80, 81
	REXPR6          rules 82, 83
	REXPR7          rules 84, 85
	REXPR8          rules 86, 87
	REXPR9          rules 88, 89, 90, 91
	REXPR10         rules 92, 93, 94, 95, 96, 97
	REXPR11         rules 98, 99
	REXPR12         rules 100, 101
	LEXPR           rule  102
	BLEXPR          rules 103, 104

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pP -> . P                                    (rule 0)

	'program'      shift, and enter state 5

	P              goto state 3
	PBlock         goto state 4

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	':='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'<>'           reduce using rule 1
	'='            reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'and'          reduce using rule 1
	'do'           reduce using rule 1
	'else'         reduce using rule 1
	'mod'          reduce using rule 1
	'or'           reduce using rule 1
	'then'         reduce using rule 1


State 3

	%start_pP -> P .                                    (rule 0)

	%eof           accept


State 4

	P -> PBlock . ListDclBlock BEBlock '.'              (rule 6)

	'begin'        reduce using rule 24
	'function'     shift, and enter state 12
	'procedure'    shift, and enter state 13
	'var'          shift, and enter state 14

	DclBlock       goto state 7
	ListDclBlock   goto state 8
	PcBlock        goto state 9
	FcBlock        goto state 10
	VrBlock        goto state 11

State 5

	PBlock -> 'program' . Ident ';'                     (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 6

State 6

	PBlock -> 'program' Ident . ';'                     (rule 7)

	';'            shift, and enter state 25


State 7

	ListDclBlock -> DclBlock . ListDclBlock             (rule 25)

	'begin'        reduce using rule 24
	'function'     shift, and enter state 12
	'procedure'    shift, and enter state 13
	'var'          shift, and enter state 14

	DclBlock       goto state 7
	ListDclBlock   goto state 24
	PcBlock        goto state 9
	FcBlock        goto state 10
	VrBlock        goto state 11

State 8

	P -> PBlock ListDclBlock . BEBlock '.'              (rule 6)

	'begin'        shift, and enter state 23

	BEBlock        goto state 22

State 9

	DclBlock -> PcBlock .                               (rule 21)

	'begin'        reduce using rule 21
	'end'          reduce using rule 21
	'function'     reduce using rule 21
	'if'           reduce using rule 21
	'procedure'    reduce using rule 21
	'readChar'     reduce using rule 21
	'readInt'      reduce using rule 21
	'readReal'     reduce using rule 21
	'readString'   reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'writeChar'    reduce using rule 21
	'writeInt'     reduce using rule 21
	'writeReal'    reduce using rule 21
	'writeString'  reduce using rule 21
	L_Ident        reduce using rule 21


State 10

	DclBlock -> FcBlock .                               (rule 23)

	'begin'        reduce using rule 23
	'end'          reduce using rule 23
	'function'     reduce using rule 23
	'if'           reduce using rule 23
	'procedure'    reduce using rule 23
	'readChar'     reduce using rule 23
	'readInt'      reduce using rule 23
	'readReal'     reduce using rule 23
	'readString'   reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'writeChar'    reduce using rule 23
	'writeInt'     reduce using rule 23
	'writeReal'    reduce using rule 23
	'writeString'  reduce using rule 23
	L_Ident        reduce using rule 23


State 11

	DclBlock -> VrBlock .                               (rule 22)

	'begin'        reduce using rule 22
	'end'          reduce using rule 22
	'function'     reduce using rule 22
	'if'           reduce using rule 22
	'procedure'    reduce using rule 22
	'readChar'     reduce using rule 22
	'readInt'      reduce using rule 22
	'readReal'     reduce using rule 22
	'readString'   reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'writeChar'    reduce using rule 22
	'writeInt'     reduce using rule 22
	'writeReal'    reduce using rule 22
	'writeString'  reduce using rule 22
	L_Ident        reduce using rule 22


State 12

	FcBlock -> 'function' . Ident Prms ':' Type ';' BEBlock ';'    (rule 27)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 13

	PcBlock -> 'procedure' . Ident Prms ';' BEBlock ';'    (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 14

	VrBlock -> 'var' . ListVrDef                        (rule 39)

	L_Ident        shift, and enter state 2

	Ident          goto state 15
	VrDef          goto state 16
	VRI            goto state 17
	ListVRI        goto state 18
	ListVrDef      goto state 19

State 15

	VRI -> Ident .                                      (rule 41)

	','            reduce using rule 41
	':'            reduce using rule 41


State 16

	ListVrDef -> VrDef . ';'                            (rule 44)
	ListVrDef -> VrDef . ';' ListVrDef                  (rule 45)

	';'            shift, and enter state 55


State 17

	ListVRI -> VRI .                                    (rule 42)
	ListVRI -> VRI . ',' ListVRI                        (rule 43)

	','            shift, and enter state 54
	':'            reduce using rule 42


State 18

	VrDef -> ListVRI . ':' Type                         (rule 40)

	':'            shift, and enter state 53


State 19

	VrBlock -> 'var' ListVrDef .                        (rule 39)

	'begin'        reduce using rule 39
	'end'          reduce using rule 39
	'function'     reduce using rule 39
	'if'           reduce using rule 39
	'procedure'    reduce using rule 39
	'readChar'     reduce using rule 39
	'readInt'      reduce using rule 39
	'readReal'     reduce using rule 39
	'readString'   reduce using rule 39
	'var'          reduce using rule 39
	'while'        reduce using rule 39
	'writeChar'    reduce using rule 39
	'writeInt'     reduce using rule 39
	'writeReal'    reduce using rule 39
	'writeString'  reduce using rule 39
	L_Ident        reduce using rule 39


State 20

	PcBlock -> 'procedure' Ident . Prms ';' BEBlock ';'    (rule 26)

	'('            shift, and enter state 51
	';'            reduce using rule 29

	Prms           goto state 52

State 21

	FcBlock -> 'function' Ident . Prms ':' Type ';' BEBlock ';'    (rule 27)

	'('            shift, and enter state 51
	':'            reduce using rule 29

	Prms           goto state 50

State 22

	P -> PBlock ListDclBlock BEBlock . '.'              (rule 6)

	'.'            shift, and enter state 49


State 23

	BEBlock -> 'begin' . ListBegEndStmt 'end'           (rule 8)

	'begin'        shift, and enter state 23
	'end'          reduce using rule 11
	'function'     shift, and enter state 12
	'if'           shift, and enter state 39
	'procedure'    shift, and enter state 13
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'var'          shift, and enter state 14
	'while'        shift, and enter state 44
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2

	Ident          goto state 26
	BEBlock        goto state 27
	BegEndStmt     goto state 28
	ListBegEndStmt goto state 29
	Stmt           goto state 30
	SelStmt        goto state 31
	IterStmt       goto state 32
	DclBlock       goto state 33
	PcBlock        goto state 9
	FcBlock        goto state 10
	Call           goto state 34
	VrBlock        goto state 11
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	LEXPR          goto state 37
	BLEXPR         goto state 38

State 24

	ListDclBlock -> DclBlock ListDclBlock .             (rule 25)

	'begin'        reduce using rule 25


State 25

	PBlock -> 'program' Ident ';' .                     (rule 7)

	'begin'        reduce using rule 7
	'function'     reduce using rule 7
	'procedure'    reduce using rule 7
	'var'          reduce using rule 7


State 26

	Call -> Ident . '(' ListREXPR ')'                   (rule 33)
	BLEXPR -> Ident .                                   (rule 103)

	'('            shift, and enter state 111
	')'            reduce using rule 103
	'*'            reduce using rule 103
	'+'            reduce using rule 103
	','            reduce using rule 103
	'-'            reduce using rule 103
	'/'            reduce using rule 103
	':='           reduce using rule 103
	';'            reduce using rule 103
	'<'            reduce using rule 103
	'<='           reduce using rule 103
	'<>'           reduce using rule 103
	'='            reduce using rule 103
	'>'            reduce using rule 103
	'>='           reduce using rule 103
	'['            reduce using rule 103
	']'            reduce using rule 103
	'^'            reduce using rule 103
	'and'          reduce using rule 103
	'do'           reduce using rule 103
	'else'         reduce using rule 103
	'mod'          reduce using rule 103
	'or'           reduce using rule 103
	'then'         reduce using rule 103


State 27

	Stmt -> BEBlock .                                   (rule 13)

	';'            reduce using rule 13
	'else'         reduce using rule 13


State 28

	ListBegEndStmt -> BegEndStmt . ListBegEndStmt       (rule 12)

	'begin'        shift, and enter state 23
	'end'          reduce using rule 11
	'function'     shift, and enter state 12
	'if'           shift, and enter state 39
	'procedure'    shift, and enter state 13
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'var'          shift, and enter state 14
	'while'        shift, and enter state 44
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2

	Ident          goto state 26
	BEBlock        goto state 27
	BegEndStmt     goto state 28
	ListBegEndStmt goto state 110
	Stmt           goto state 30
	SelStmt        goto state 31
	IterStmt       goto state 32
	DclBlock       goto state 33
	PcBlock        goto state 9
	FcBlock        goto state 10
	Call           goto state 34
	VrBlock        goto state 11
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	LEXPR          goto state 37
	BLEXPR         goto state 38

State 29

	BEBlock -> 'begin' ListBegEndStmt . 'end'           (rule 8)

	'end'          shift, and enter state 109


State 30

	BegEndStmt -> Stmt . ';'                            (rule 9)

	';'            shift, and enter state 108


State 31

	Stmt -> SelStmt .                                   (rule 16)

	';'            reduce using rule 16
	'else'         reduce using rule 16


State 32

	Stmt -> IterStmt .                                  (rule 17)

	';'            reduce using rule 17
	'else'         reduce using rule 17


State 33

	BegEndStmt -> DclBlock .                            (rule 10)

	'begin'        reduce using rule 10
	'end'          reduce using rule 10
	'function'     reduce using rule 10
	'if'           reduce using rule 10
	'procedure'    reduce using rule 10
	'readChar'     reduce using rule 10
	'readInt'      reduce using rule 10
	'readReal'     reduce using rule 10
	'readString'   reduce using rule 10
	'var'          reduce using rule 10
	'while'        reduce using rule 10
	'writeChar'    reduce using rule 10
	'writeInt'     reduce using rule 10
	'writeReal'    reduce using rule 10
	'writeString'  reduce using rule 10
	L_Ident        reduce using rule 10


State 34

	Stmt -> Call .                                      (rule 15)

	';'            reduce using rule 15
	'else'         reduce using rule 15


State 35

	Call -> ReadDefProc . '(' LEXPR ')'                 (rule 34)

	'('            shift, and enter state 107


State 36

	Call -> WriteDefProc . '(' REXPR ')'                (rule 35)

	'('            shift, and enter state 106


State 37

	Stmt -> LEXPR . ':=' REXPR                          (rule 14)

	':='           shift, and enter state 105


State 38

	LEXPR -> BLEXPR .                                   (rule 102)
	BLEXPR -> BLEXPR . '[' REXPR ']'                    (rule 104)

	')'            reduce using rule 102
	'*'            reduce using rule 102
	'+'            reduce using rule 102
	','            reduce using rule 102
	'-'            reduce using rule 102
	'/'            reduce using rule 102
	':='           reduce using rule 102
	';'            reduce using rule 102
	'<'            reduce using rule 102
	'<='           reduce using rule 102
	'<>'           reduce using rule 102
	'='            reduce using rule 102
	'>'            reduce using rule 102
	'>='           reduce using rule 102
	'['            shift, and enter state 104
	']'            reduce using rule 102
	'^'            reduce using rule 102
	'and'          reduce using rule 102
	'do'           reduce using rule 102
	'else'         reduce using rule 102
	'mod'          reduce using rule 102
	'or'           reduce using rule 102
	'then'         reduce using rule 102


State 39

	SelStmt -> 'if' . REXPR 'then' Stmt                 (rule 18)
	SelStmt -> 'if' . REXPR 'then' Stmt 'else' Stmt     (rule 19)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 103
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 40

	ReadDefProc -> 'readChar' .                         (rule 58)

	'('            reduce using rule 58


State 41

	ReadDefProc -> 'readInt' .                          (rule 57)

	'('            reduce using rule 57


State 42

	ReadDefProc -> 'readReal' .                         (rule 59)

	'('            reduce using rule 59


State 43

	ReadDefProc -> 'readString' .                       (rule 60)

	'('            reduce using rule 60


State 44

	IterStmt -> 'while' . REXPR 'do' Stmt               (rule 20)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 79
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 45

	WriteDefProc -> 'writeChar' .                       (rule 62)

	'('            reduce using rule 62


State 46

	WriteDefProc -> 'writeInt' .                        (rule 61)

	'('            reduce using rule 61


State 47

	WriteDefProc -> 'writeReal' .                       (rule 63)

	'('            reduce using rule 63


State 48

	WriteDefProc -> 'writeString' .                     (rule 64)

	'('            reduce using rule 64


State 49

	P -> PBlock ListDclBlock BEBlock '.' .              (rule 6)

	%eof           reduce using rule 6


State 50

	FcBlock -> 'function' Ident Prms . ':' Type ';' BEBlock ';'    (rule 27)

	':'            shift, and enter state 72


State 51

	Prms -> '(' . ListPrm ')'                           (rule 28)

	L_Ident        shift, and enter state 2

	Ident          goto state 15
	Prm            goto state 69
	ListPrm        goto state 70
	VRI            goto state 17
	ListVRI        goto state 71

State 52

	PcBlock -> 'procedure' Ident Prms . ';' BEBlock ';'    (rule 26)

	';'            shift, and enter state 68


State 53

	VrDef -> ListVRI ':' . Type                         (rule 40)

	'^'            shift, and enter state 61
	'array'        shift, and enter state 62
	'boolean'      shift, and enter state 63
	'char'         shift, and enter state 64
	'integer'      shift, and enter state 65
	'real'         shift, and enter state 66
	'string'       shift, and enter state 67

	Type           goto state 58
	BaseType       goto state 59
	CompType       goto state 60

State 54

	ListVRI -> VRI ',' . ListVRI                        (rule 43)

	L_Ident        shift, and enter state 2

	Ident          goto state 15
	VRI            goto state 17
	ListVRI        goto state 57

State 55

	ListVrDef -> VrDef ';' .                            (rule 44)
	ListVrDef -> VrDef ';' . ListVrDef                  (rule 45)

	'begin'        reduce using rule 44
	'end'          reduce using rule 44
	'function'     reduce using rule 44
	'if'           reduce using rule 44
	'procedure'    reduce using rule 44
	'readChar'     reduce using rule 44
	'readInt'      reduce using rule 44
	'readReal'     reduce using rule 44
	'readString'   reduce using rule 44
	'var'          reduce using rule 44
	'while'        reduce using rule 44
	'writeChar'    reduce using rule 44
	'writeInt'     reduce using rule 44
	'writeReal'    reduce using rule 44
	'writeString'  reduce using rule 44
	L_Ident        shift, and enter state 2
			(reduce using rule 44)


	Ident          goto state 15
	VrDef          goto state 16
	VRI            goto state 17
	ListVRI        goto state 18
	ListVrDef      goto state 56

State 56

	ListVrDef -> VrDef ';' ListVrDef .                  (rule 45)

	'begin'        reduce using rule 45
	'end'          reduce using rule 45
	'function'     reduce using rule 45
	'if'           reduce using rule 45
	'procedure'    reduce using rule 45
	'readChar'     reduce using rule 45
	'readInt'      reduce using rule 45
	'readReal'     reduce using rule 45
	'readString'   reduce using rule 45
	'var'          reduce using rule 45
	'while'        reduce using rule 45
	'writeChar'    reduce using rule 45
	'writeInt'     reduce using rule 45
	'writeReal'    reduce using rule 45
	'writeString'  reduce using rule 45
	L_Ident        reduce using rule 45


State 57

	ListVRI -> VRI ',' ListVRI .                        (rule 43)

	':'            reduce using rule 43


State 58

	VrDef -> ListVRI ':' Type .                         (rule 40)

	';'            reduce using rule 40


State 59

	Type -> BaseType .                                  (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48


State 60

	Type -> CompType .                                  (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49


State 61

	CompType -> '^' . BaseType                          (rule 56)

	'boolean'      shift, and enter state 63
	'char'         shift, and enter state 64
	'integer'      shift, and enter state 65
	'real'         shift, and enter state 66
	'string'       shift, and enter state 67

	BaseType       goto state 145

State 62

	CompType -> 'array' . '[' Integer '..' Integer ']' 'of' Type    (rule 55)

	'['            shift, and enter state 144


State 63

	BaseType -> 'boolean' .                             (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51


State 64

	BaseType -> 'char' .                                (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53


State 65

	BaseType -> 'integer' .                             (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50


State 66

	BaseType -> 'real' .                                (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52


State 67

	BaseType -> 'string' .                              (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54


State 68

	PcBlock -> 'procedure' Ident Prms ';' . BEBlock ';'    (rule 26)

	'begin'        shift, and enter state 23

	BEBlock        goto state 143

State 69

	ListPrm -> Prm .                                    (rule 31)
	ListPrm -> Prm . ',' ListPrm                        (rule 32)

	')'            reduce using rule 31
	','            shift, and enter state 142


State 70

	Prms -> '(' ListPrm . ')'                           (rule 28)

	')'            shift, and enter state 141


State 71

	Prm -> ListVRI . ':' Type                           (rule 30)

	':'            shift, and enter state 140


State 72

	FcBlock -> 'function' Ident Prms ':' . Type ';' BEBlock ';'    (rule 27)

	'^'            shift, and enter state 61
	'array'        shift, and enter state 62
	'boolean'      shift, and enter state 63
	'char'         shift, and enter state 64
	'integer'      shift, and enter state 65
	'real'         shift, and enter state 66
	'string'       shift, and enter state 67

	Type           goto state 139
	BaseType       goto state 59
	CompType       goto state 60

State 73

	REXPR10 -> Char .                                   (rule 95)

	')'            reduce using rule 95
	'*'            reduce using rule 95
	'+'            reduce using rule 95
	','            reduce using rule 95
	'-'            reduce using rule 95
	'/'            reduce using rule 95
	';'            reduce using rule 95
	'<'            reduce using rule 95
	'<='           reduce using rule 95
	'<>'           reduce using rule 95
	'='            reduce using rule 95
	'>'            reduce using rule 95
	'>='           reduce using rule 95
	']'            reduce using rule 95
	'^'            reduce using rule 95
	'and'          reduce using rule 95
	'do'           reduce using rule 95
	'else'         reduce using rule 95
	'mod'          reduce using rule 95
	'or'           reduce using rule 95
	'then'         reduce using rule 95


State 74

	REXPR10 -> Double .                                 (rule 96)

	')'            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'/'            reduce using rule 96
	';'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'<>'           reduce using rule 96
	'='            reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	']'            reduce using rule 96
	'^'            reduce using rule 96
	'and'          reduce using rule 96
	'do'           reduce using rule 96
	'else'         reduce using rule 96
	'mod'          reduce using rule 96
	'or'           reduce using rule 96
	'then'         reduce using rule 96


State 75

	REXPR10 -> Integer .                                (rule 93)

	')'            reduce using rule 93
	'*'            reduce using rule 93
	'+'            reduce using rule 93
	','            reduce using rule 93
	'-'            reduce using rule 93
	'/'            reduce using rule 93
	';'            reduce using rule 93
	'<'            reduce using rule 93
	'<='           reduce using rule 93
	'<>'           reduce using rule 93
	'='            reduce using rule 93
	'>'            reduce using rule 93
	'>='           reduce using rule 93
	']'            reduce using rule 93
	'^'            reduce using rule 93
	'and'          reduce using rule 93
	'do'           reduce using rule 93
	'else'         reduce using rule 93
	'mod'          reduce using rule 93
	'or'           reduce using rule 93
	'then'         reduce using rule 93


State 76

	REXPR10 -> String .                                 (rule 94)

	')'            reduce using rule 94
	'*'            reduce using rule 94
	'+'            reduce using rule 94
	','            reduce using rule 94
	'-'            reduce using rule 94
	'/'            reduce using rule 94
	';'            reduce using rule 94
	'<'            reduce using rule 94
	'<='           reduce using rule 94
	'<>'           reduce using rule 94
	'='            reduce using rule 94
	'>'            reduce using rule 94
	'>='           reduce using rule 94
	']'            reduce using rule 94
	'^'            reduce using rule 94
	'and'          reduce using rule 94
	'do'           reduce using rule 94
	'else'         reduce using rule 94
	'mod'          reduce using rule 94
	'or'           reduce using rule 94
	'then'         reduce using rule 94


State 77

	REXPR11 -> Call .                                   (rule 99)

	')'            reduce using rule 99
	'*'            reduce using rule 99
	'+'            reduce using rule 99
	','            reduce using rule 99
	'-'            reduce using rule 99
	'/'            reduce using rule 99
	';'            reduce using rule 99
	'<'            reduce using rule 99
	'<='           reduce using rule 99
	'<>'           reduce using rule 99
	'='            reduce using rule 99
	'>'            reduce using rule 99
	'>='           reduce using rule 99
	']'            reduce using rule 99
	'^'            reduce using rule 99
	'and'          reduce using rule 99
	'do'           reduce using rule 99
	'else'         reduce using rule 99
	'mod'          reduce using rule 99
	'or'           reduce using rule 99
	'then'         reduce using rule 99


State 78

	REXPR10 -> Boolean .                                (rule 97)

	')'            reduce using rule 97
	'*'            reduce using rule 97
	'+'            reduce using rule 97
	','            reduce using rule 97
	'-'            reduce using rule 97
	'/'            reduce using rule 97
	';'            reduce using rule 97
	'<'            reduce using rule 97
	'<='           reduce using rule 97
	'<>'           reduce using rule 97
	'='            reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	']'            reduce using rule 97
	'^'            reduce using rule 97
	'and'          reduce using rule 97
	'do'           reduce using rule 97
	'else'         reduce using rule 97
	'mod'          reduce using rule 97
	'or'           reduce using rule 97
	'then'         reduce using rule 97


State 79

	IterStmt -> 'while' REXPR . 'do' Stmt               (rule 20)
	REXPR -> REXPR . 'or' REXPR1                        (rule 66)

	'do'           shift, and enter state 138
	'or'           shift, and enter state 119


State 80

	REXPR -> REXPR1 .                                   (rule 65)
	REXPR1 -> REXPR1 . 'and' REXPR2                     (rule 68)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	']'            reduce using rule 65
	'and'          shift, and enter state 137
	'do'           reduce using rule 65
	'else'         reduce using rule 65
	'or'           reduce using rule 65
	'then'         reduce using rule 65


State 81

	REXPR1 -> REXPR2 .                                  (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	']'            reduce using rule 67
	'and'          reduce using rule 67
	'do'           reduce using rule 67
	'else'         reduce using rule 67
	'or'           reduce using rule 67
	'then'         reduce using rule 67


State 82

	REXPR2 -> REXPR3 .                                  (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	']'            reduce using rule 69
	'and'          reduce using rule 69
	'do'           reduce using rule 69
	'else'         reduce using rule 69
	'or'           reduce using rule 69
	'then'         reduce using rule 69


State 83

	REXPR3 -> REXPR4 .                                  (rule 71)
	REXPR3 -> REXPR4 . '=' REXPR4                       (rule 72)
	REXPR3 -> REXPR4 . '<>' REXPR4                      (rule 73)
	REXPR3 -> REXPR4 . '<' REXPR4                       (rule 74)
	REXPR3 -> REXPR4 . '<=' REXPR4                      (rule 75)
	REXPR3 -> REXPR4 . '>' REXPR4                       (rule 76)
	REXPR3 -> REXPR4 . '>=' REXPR4                      (rule 77)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 71
	','            reduce using rule 71
	'-'            shift, and enter state 130
	';'            reduce using rule 71
	'<'            shift, and enter state 131
	'<='           shift, and enter state 132
	'<>'           shift, and enter state 133
	'='            shift, and enter state 134
	'>'            shift, and enter state 135
	'>='           shift, and enter state 136
	']'            reduce using rule 71
	'and'          reduce using rule 71
	'do'           reduce using rule 71
	'else'         reduce using rule 71
	'or'           reduce using rule 71
	'then'         reduce using rule 71


State 84

	REXPR4 -> REXPR5 .                                  (rule 78)
	REXPR5 -> REXPR5 . '+' REXPR6                       (rule 81)

	')'            reduce using rule 78
	'+'            shift, and enter state 129
	','            reduce using rule 78
	'-'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'<>'           reduce using rule 78
	'='            reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	']'            reduce using rule 78
	'and'          reduce using rule 78
	'do'           reduce using rule 78
	'else'         reduce using rule 78
	'or'           reduce using rule 78
	'then'         reduce using rule 78


State 85

	REXPR5 -> REXPR6 .                                  (rule 80)
	REXPR6 -> REXPR6 . '/' REXPR7                       (rule 83)

	')'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            shift, and enter state 128
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'<>'           reduce using rule 80
	'='            reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'and'          reduce using rule 80
	'do'           reduce using rule 80
	'else'         reduce using rule 80
	'or'           reduce using rule 80
	'then'         reduce using rule 80


State 86

	REXPR6 -> REXPR7 .                                  (rule 82)
	REXPR7 -> REXPR7 . '*' REXPR8                       (rule 85)

	')'            reduce using rule 82
	'*'            shift, and enter state 127
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'<>'           reduce using rule 82
	'='            reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'and'          reduce using rule 82
	'do'           reduce using rule 82
	'else'         reduce using rule 82
	'or'           reduce using rule 82
	'then'         reduce using rule 82


State 87

	REXPR7 -> REXPR8 .                                  (rule 84)
	REXPR8 -> REXPR8 . 'mod' REXPR9                     (rule 87)

	')'            reduce using rule 84
	'*'            reduce using rule 84
	'+'            reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'/'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'<>'           reduce using rule 84
	'='            reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	']'            reduce using rule 84
	'and'          reduce using rule 84
	'do'           reduce using rule 84
	'else'         reduce using rule 84
	'mod'          shift, and enter state 126
	'or'           reduce using rule 84
	'then'         reduce using rule 84


State 88

	REXPR8 -> REXPR9 .                                  (rule 86)

	')'            reduce using rule 86
	'*'            reduce using rule 86
	'+'            reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'/'            reduce using rule 86
	';'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'<>'           reduce using rule 86
	'='            reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	']'            reduce using rule 86
	'and'          reduce using rule 86
	'do'           reduce using rule 86
	'else'         reduce using rule 86
	'mod'          reduce using rule 86
	'or'           reduce using rule 86
	'then'         reduce using rule 86


State 89

	REXPR9 -> REXPR10 .                                 (rule 88)
	REXPR9 -> REXPR10 . '^'                             (rule 91)

	')'            reduce using rule 88
	'*'            reduce using rule 88
	'+'            reduce using rule 88
	','            reduce using rule 88
	'-'            reduce using rule 88
	'/'            reduce using rule 88
	';'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'<>'           reduce using rule 88
	'='            reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	']'            reduce using rule 88
	'^'            shift, and enter state 125
	'and'          reduce using rule 88
	'do'           reduce using rule 88
	'else'         reduce using rule 88
	'mod'          reduce using rule 88
	'or'           reduce using rule 88
	'then'         reduce using rule 88


State 90

	REXPR10 -> REXPR11 .                                (rule 92)

	')'            reduce using rule 92
	'*'            reduce using rule 92
	'+'            reduce using rule 92
	','            reduce using rule 92
	'-'            reduce using rule 92
	'/'            reduce using rule 92
	';'            reduce using rule 92
	'<'            reduce using rule 92
	'<='           reduce using rule 92
	'<>'           reduce using rule 92
	'='            reduce using rule 92
	'>'            reduce using rule 92
	'>='           reduce using rule 92
	']'            reduce using rule 92
	'^'            reduce using rule 92
	'and'          reduce using rule 92
	'do'           reduce using rule 92
	'else'         reduce using rule 92
	'mod'          reduce using rule 92
	'or'           reduce using rule 92
	'then'         reduce using rule 92


State 91

	REXPR11 -> REXPR12 .                                (rule 98)

	')'            reduce using rule 98
	'*'            reduce using rule 98
	'+'            reduce using rule 98
	','            reduce using rule 98
	'-'            reduce using rule 98
	'/'            reduce using rule 98
	';'            reduce using rule 98
	'<'            reduce using rule 98
	'<='           reduce using rule 98
	'<>'           reduce using rule 98
	'='            reduce using rule 98
	'>'            reduce using rule 98
	'>='           reduce using rule 98
	']'            reduce using rule 98
	'^'            reduce using rule 98
	'and'          reduce using rule 98
	'do'           reduce using rule 98
	'else'         reduce using rule 98
	'mod'          reduce using rule 98
	'or'           reduce using rule 98
	'then'         reduce using rule 98


State 92

	REXPR12 -> LEXPR .                                  (rule 101)

	')'            reduce using rule 101
	'*'            reduce using rule 101
	'+'            reduce using rule 101
	','            reduce using rule 101
	'-'            reduce using rule 101
	'/'            reduce using rule 101
	';'            reduce using rule 101
	'<'            reduce using rule 101
	'<='           reduce using rule 101
	'<>'           reduce using rule 101
	'='            reduce using rule 101
	'>'            reduce using rule 101
	'>='           reduce using rule 101
	']'            reduce using rule 101
	'^'            reduce using rule 101
	'and'          reduce using rule 101
	'do'           reduce using rule 101
	'else'         reduce using rule 101
	'mod'          reduce using rule 101
	'or'           reduce using rule 101
	'then'         reduce using rule 101


State 93

	REXPR12 -> '(' . REXPR ')'                          (rule 100)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 124
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 94

	REXPR9 -> '-' . REXPR10                             (rule 89)

	'('            shift, and enter state 93
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR10        goto state 123
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 95

	REXPR9 -> '@' . REXPR10                             (rule 90)

	'('            shift, and enter state 93
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR10        goto state 122
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 96

	Boolean -> 'false' .                                (rule 47)

	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'<>'           reduce using rule 47
	'='            reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'and'          reduce using rule 47
	'do'           reduce using rule 47
	'else'         reduce using rule 47
	'mod'          reduce using rule 47
	'or'           reduce using rule 47
	'then'         reduce using rule 47


State 97

	REXPR2 -> 'not' . REXPR3                            (rule 70)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR3         goto state 121
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 98

	Boolean -> 'true' .                                 (rule 46)

	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'<>'           reduce using rule 46
	'='            reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'and'          reduce using rule 46
	'do'           reduce using rule 46
	'else'         reduce using rule 46
	'mod'          reduce using rule 46
	'or'           reduce using rule 46
	'then'         reduce using rule 46


State 99

	Char -> L_charac .                                  (rule 2)

	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'<>'           reduce using rule 2
	'='            reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'and'          reduce using rule 2
	'do'           reduce using rule 2
	'else'         reduce using rule 2
	'mod'          reduce using rule 2
	'or'           reduce using rule 2
	'then'         reduce using rule 2


State 100

	Double -> L_doubl .                                 (rule 3)

	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'<>'           reduce using rule 3
	'='            reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'and'          reduce using rule 3
	'do'           reduce using rule 3
	'else'         reduce using rule 3
	'mod'          reduce using rule 3
	'or'           reduce using rule 3
	'then'         reduce using rule 3


State 101

	Integer -> L_integ .                                (rule 4)

	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'..'           reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'<>'           reduce using rule 4
	'='            reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'and'          reduce using rule 4
	'do'           reduce using rule 4
	'else'         reduce using rule 4
	'mod'          reduce using rule 4
	'or'           reduce using rule 4
	'then'         reduce using rule 4


State 102

	String -> L_quoted .                                (rule 5)

	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'<>'           reduce using rule 5
	'='            reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'and'          reduce using rule 5
	'do'           reduce using rule 5
	'else'         reduce using rule 5
	'mod'          reduce using rule 5
	'or'           reduce using rule 5
	'then'         reduce using rule 5


State 103

	SelStmt -> 'if' REXPR . 'then' Stmt                 (rule 18)
	SelStmt -> 'if' REXPR . 'then' Stmt 'else' Stmt     (rule 19)
	REXPR -> REXPR . 'or' REXPR1                        (rule 66)

	'or'           shift, and enter state 119
	'then'         shift, and enter state 120


State 104

	BLEXPR -> BLEXPR '[' . REXPR ']'                    (rule 104)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 118
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 105

	Stmt -> LEXPR ':=' . REXPR                          (rule 14)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 117
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 106

	Call -> WriteDefProc '(' . REXPR ')'                (rule 35)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 116
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 107

	Call -> ReadDefProc '(' . LEXPR ')'                 (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 114
	LEXPR          goto state 115
	BLEXPR         goto state 38

State 108

	BegEndStmt -> Stmt ';' .                            (rule 9)

	'begin'        reduce using rule 9
	'end'          reduce using rule 9
	'function'     reduce using rule 9
	'if'           reduce using rule 9
	'procedure'    reduce using rule 9
	'readChar'     reduce using rule 9
	'readInt'      reduce using rule 9
	'readReal'     reduce using rule 9
	'readString'   reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'writeChar'    reduce using rule 9
	'writeInt'     reduce using rule 9
	'writeReal'    reduce using rule 9
	'writeString'  reduce using rule 9
	L_Ident        reduce using rule 9


State 109

	BEBlock -> 'begin' ListBegEndStmt 'end' .           (rule 8)

	'.'            reduce using rule 8
	';'            reduce using rule 8
	'else'         reduce using rule 8


State 110

	ListBegEndStmt -> BegEndStmt ListBegEndStmt .       (rule 12)

	'end'          reduce using rule 12


State 111

	Call -> Ident '(' . ListREXPR ')'                   (rule 33)

	'('            shift, and enter state 93
	')'            reduce using rule 36
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	ListREXPR      goto state 112
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 113
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 112

	Call -> Ident '(' ListREXPR . ')'                   (rule 33)

	')'            shift, and enter state 171


State 113

	ListREXPR -> REXPR .                                (rule 37)
	ListREXPR -> REXPR . ',' ListREXPR                  (rule 38)
	REXPR -> REXPR . 'or' REXPR1                        (rule 66)

	')'            reduce using rule 37
	','            shift, and enter state 170
	'or'           shift, and enter state 119


State 114

	BLEXPR -> Ident .                                   (rule 103)

	')'            reduce using rule 103
	'['            reduce using rule 103


State 115

	Call -> ReadDefProc '(' LEXPR . ')'                 (rule 34)

	')'            shift, and enter state 169


State 116

	Call -> WriteDefProc '(' REXPR . ')'                (rule 35)
	REXPR -> REXPR . 'or' REXPR1                        (rule 66)

	')'            shift, and enter state 168
	'or'           shift, and enter state 119


State 117

	Stmt -> LEXPR ':=' REXPR .                          (rule 14)
	REXPR -> REXPR . 'or' REXPR1                        (rule 66)

	';'            reduce using rule 14
	'else'         reduce using rule 14
	'or'           shift, and enter state 119


State 118

	REXPR -> REXPR . 'or' REXPR1                        (rule 66)
	BLEXPR -> BLEXPR '[' REXPR . ']'                    (rule 104)

	']'            shift, and enter state 167
	'or'           shift, and enter state 119


State 119

	REXPR -> REXPR 'or' . REXPR1                        (rule 66)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR1         goto state 166
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 120

	SelStmt -> 'if' REXPR 'then' . Stmt                 (rule 18)
	SelStmt -> 'if' REXPR 'then' . Stmt 'else' Stmt     (rule 19)

	'begin'        shift, and enter state 23
	'if'           shift, and enter state 39
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'while'        shift, and enter state 44
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2

	Ident          goto state 26
	BEBlock        goto state 27
	Stmt           goto state 165
	SelStmt        goto state 31
	IterStmt       goto state 32
	Call           goto state 34
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	LEXPR          goto state 37
	BLEXPR         goto state 38

State 121

	REXPR2 -> 'not' REXPR3 .                            (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	']'            reduce using rule 70
	'and'          reduce using rule 70
	'do'           reduce using rule 70
	'else'         reduce using rule 70
	'or'           reduce using rule 70
	'then'         reduce using rule 70


State 122

	REXPR9 -> '@' REXPR10 .                             (rule 90)

	')'            reduce using rule 90
	'*'            reduce using rule 90
	'+'            reduce using rule 90
	','            reduce using rule 90
	'-'            reduce using rule 90
	'/'            reduce using rule 90
	';'            reduce using rule 90
	'<'            reduce using rule 90
	'<='           reduce using rule 90
	'<>'           reduce using rule 90
	'='            reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	']'            reduce using rule 90
	'and'          reduce using rule 90
	'do'           reduce using rule 90
	'else'         reduce using rule 90
	'mod'          reduce using rule 90
	'or'           reduce using rule 90
	'then'         reduce using rule 90


State 123

	REXPR9 -> '-' REXPR10 .                             (rule 89)

	')'            reduce using rule 89
	'*'            reduce using rule 89
	'+'            reduce using rule 89
	','            reduce using rule 89
	'-'            reduce using rule 89
	'/'            reduce using rule 89
	';'            reduce using rule 89
	'<'            reduce using rule 89
	'<='           reduce using rule 89
	'<>'           reduce using rule 89
	'='            reduce using rule 89
	'>'            reduce using rule 89
	'>='           reduce using rule 89
	']'            reduce using rule 89
	'and'          reduce using rule 89
	'do'           reduce using rule 89
	'else'         reduce using rule 89
	'mod'          reduce using rule 89
	'or'           reduce using rule 89
	'then'         reduce using rule 89


State 124

	REXPR -> REXPR . 'or' REXPR1                        (rule 66)
	REXPR12 -> '(' REXPR . ')'                          (rule 100)

	')'            shift, and enter state 164
	'or'           shift, and enter state 119


State 125

	REXPR9 -> REXPR10 '^' .                             (rule 91)

	')'            reduce using rule 91
	'*'            reduce using rule 91
	'+'            reduce using rule 91
	','            reduce using rule 91
	'-'            reduce using rule 91
	'/'            reduce using rule 91
	';'            reduce using rule 91
	'<'            reduce using rule 91
	'<='           reduce using rule 91
	'<>'           reduce using rule 91
	'='            reduce using rule 91
	'>'            reduce using rule 91
	'>='           reduce using rule 91
	']'            reduce using rule 91
	'and'          reduce using rule 91
	'do'           reduce using rule 91
	'else'         reduce using rule 91
	'mod'          reduce using rule 91
	'or'           reduce using rule 91
	'then'         reduce using rule 91


State 126

	REXPR8 -> REXPR8 'mod' . REXPR9                     (rule 87)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR9         goto state 163
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 127

	REXPR7 -> REXPR7 '*' . REXPR8                       (rule 85)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR8         goto state 162
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 128

	REXPR6 -> REXPR6 '/' . REXPR7                       (rule 83)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR7         goto state 161
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 129

	REXPR5 -> REXPR5 '+' . REXPR6                       (rule 81)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR6         goto state 160
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 130

	REXPR4 -> REXPR4 '-' . REXPR5                       (rule 79)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR5         goto state 159
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 131

	REXPR3 -> REXPR4 '<' . REXPR4                       (rule 74)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 158
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 132

	REXPR3 -> REXPR4 '<=' . REXPR4                      (rule 75)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 157
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 133

	REXPR3 -> REXPR4 '<>' . REXPR4                      (rule 73)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 156
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 134

	REXPR3 -> REXPR4 '=' . REXPR4                       (rule 72)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 155
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 135

	REXPR3 -> REXPR4 '>' . REXPR4                       (rule 76)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 154
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 136

	REXPR3 -> REXPR4 '>=' . REXPR4                      (rule 77)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR4         goto state 153
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 137

	REXPR1 -> REXPR1 'and' . REXPR2                     (rule 68)

	'('            shift, and enter state 93
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR2         goto state 152
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 138

	IterStmt -> 'while' REXPR 'do' . Stmt               (rule 20)

	'begin'        shift, and enter state 23
	'if'           shift, and enter state 39
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'while'        shift, and enter state 44
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2

	Ident          goto state 26
	BEBlock        goto state 27
	Stmt           goto state 151
	SelStmt        goto state 31
	IterStmt       goto state 32
	Call           goto state 34
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	LEXPR          goto state 37
	BLEXPR         goto state 38

State 139

	FcBlock -> 'function' Ident Prms ':' Type . ';' BEBlock ';'    (rule 27)

	';'            shift, and enter state 150


State 140

	Prm -> ListVRI ':' . Type                           (rule 30)

	'^'            shift, and enter state 61
	'array'        shift, and enter state 62
	'boolean'      shift, and enter state 63
	'char'         shift, and enter state 64
	'integer'      shift, and enter state 65
	'real'         shift, and enter state 66
	'string'       shift, and enter state 67

	Type           goto state 149
	BaseType       goto state 59
	CompType       goto state 60

State 141

	Prms -> '(' ListPrm ')' .                           (rule 28)

	':'            reduce using rule 28
	';'            reduce using rule 28


State 142

	ListPrm -> Prm ',' . ListPrm                        (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 15
	Prm            goto state 69
	ListPrm        goto state 148
	VRI            goto state 17
	ListVRI        goto state 71

State 143

	PcBlock -> 'procedure' Ident Prms ';' BEBlock . ';'    (rule 26)

	';'            shift, and enter state 147


State 144

	CompType -> 'array' '[' . Integer '..' Integer ']' 'of' Type    (rule 55)

	L_integ        shift, and enter state 101

	Integer        goto state 146

State 145

	CompType -> '^' BaseType .                          (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56


State 146

	CompType -> 'array' '[' Integer . '..' Integer ']' 'of' Type    (rule 55)

	'..'           shift, and enter state 175


State 147

	PcBlock -> 'procedure' Ident Prms ';' BEBlock ';' .    (rule 26)

	'begin'        reduce using rule 26
	'end'          reduce using rule 26
	'function'     reduce using rule 26
	'if'           reduce using rule 26
	'procedure'    reduce using rule 26
	'readChar'     reduce using rule 26
	'readInt'      reduce using rule 26
	'readReal'     reduce using rule 26
	'readString'   reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'writeChar'    reduce using rule 26
	'writeInt'     reduce using rule 26
	'writeReal'    reduce using rule 26
	'writeString'  reduce using rule 26
	L_Ident        reduce using rule 26


State 148

	ListPrm -> Prm ',' ListPrm .                        (rule 32)

	')'            reduce using rule 32


State 149

	Prm -> ListVRI ':' Type .                           (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30


State 150

	FcBlock -> 'function' Ident Prms ':' Type ';' . BEBlock ';'    (rule 27)

	'begin'        shift, and enter state 23

	BEBlock        goto state 174

State 151

	IterStmt -> 'while' REXPR 'do' Stmt .               (rule 20)

	';'            reduce using rule 20
	'else'         reduce using rule 20


State 152

	REXPR1 -> REXPR1 'and' REXPR2 .                     (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	']'            reduce using rule 68
	'and'          reduce using rule 68
	'do'           reduce using rule 68
	'else'         reduce using rule 68
	'or'           reduce using rule 68
	'then'         reduce using rule 68


State 153

	REXPR3 -> REXPR4 '>=' REXPR4 .                      (rule 77)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 77
	','            reduce using rule 77
	'-'            shift, and enter state 130
	';'            reduce using rule 77
	']'            reduce using rule 77
	'and'          reduce using rule 77
	'do'           reduce using rule 77
	'else'         reduce using rule 77
	'or'           reduce using rule 77
	'then'         reduce using rule 77


State 154

	REXPR3 -> REXPR4 '>' REXPR4 .                       (rule 76)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 76
	','            reduce using rule 76
	'-'            shift, and enter state 130
	';'            reduce using rule 76
	']'            reduce using rule 76
	'and'          reduce using rule 76
	'do'           reduce using rule 76
	'else'         reduce using rule 76
	'or'           reduce using rule 76
	'then'         reduce using rule 76


State 155

	REXPR3 -> REXPR4 '=' REXPR4 .                       (rule 72)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 72
	','            reduce using rule 72
	'-'            shift, and enter state 130
	';'            reduce using rule 72
	']'            reduce using rule 72
	'and'          reduce using rule 72
	'do'           reduce using rule 72
	'else'         reduce using rule 72
	'or'           reduce using rule 72
	'then'         reduce using rule 72


State 156

	REXPR3 -> REXPR4 '<>' REXPR4 .                      (rule 73)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 73
	','            reduce using rule 73
	'-'            shift, and enter state 130
	';'            reduce using rule 73
	']'            reduce using rule 73
	'and'          reduce using rule 73
	'do'           reduce using rule 73
	'else'         reduce using rule 73
	'or'           reduce using rule 73
	'then'         reduce using rule 73


State 157

	REXPR3 -> REXPR4 '<=' REXPR4 .                      (rule 75)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 75
	','            reduce using rule 75
	'-'            shift, and enter state 130
	';'            reduce using rule 75
	']'            reduce using rule 75
	'and'          reduce using rule 75
	'do'           reduce using rule 75
	'else'         reduce using rule 75
	'or'           reduce using rule 75
	'then'         reduce using rule 75


State 158

	REXPR3 -> REXPR4 '<' REXPR4 .                       (rule 74)
	REXPR4 -> REXPR4 . '-' REXPR5                       (rule 79)

	')'            reduce using rule 74
	','            reduce using rule 74
	'-'            shift, and enter state 130
	';'            reduce using rule 74
	']'            reduce using rule 74
	'and'          reduce using rule 74
	'do'           reduce using rule 74
	'else'         reduce using rule 74
	'or'           reduce using rule 74
	'then'         reduce using rule 74


State 159

	REXPR4 -> REXPR4 '-' REXPR5 .                       (rule 79)
	REXPR5 -> REXPR5 . '+' REXPR6                       (rule 81)

	')'            reduce using rule 79
	'+'            shift, and enter state 129
	','            reduce using rule 79
	'-'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'<>'           reduce using rule 79
	'='            reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'and'          reduce using rule 79
	'do'           reduce using rule 79
	'else'         reduce using rule 79
	'or'           reduce using rule 79
	'then'         reduce using rule 79


State 160

	REXPR5 -> REXPR5 '+' REXPR6 .                       (rule 81)
	REXPR6 -> REXPR6 . '/' REXPR7                       (rule 83)

	')'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'/'            shift, and enter state 128
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'<>'           reduce using rule 81
	'='            reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'and'          reduce using rule 81
	'do'           reduce using rule 81
	'else'         reduce using rule 81
	'or'           reduce using rule 81
	'then'         reduce using rule 81


State 161

	REXPR6 -> REXPR6 '/' REXPR7 .                       (rule 83)
	REXPR7 -> REXPR7 . '*' REXPR8                       (rule 85)

	')'            reduce using rule 83
	'*'            shift, and enter state 127
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'/'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'<>'           reduce using rule 83
	'='            reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'and'          reduce using rule 83
	'do'           reduce using rule 83
	'else'         reduce using rule 83
	'or'           reduce using rule 83
	'then'         reduce using rule 83


State 162

	REXPR7 -> REXPR7 '*' REXPR8 .                       (rule 85)
	REXPR8 -> REXPR8 . 'mod' REXPR9                     (rule 87)

	')'            reduce using rule 85
	'*'            reduce using rule 85
	'+'            reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'/'            reduce using rule 85
	';'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'<>'           reduce using rule 85
	'='            reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	']'            reduce using rule 85
	'and'          reduce using rule 85
	'do'           reduce using rule 85
	'else'         reduce using rule 85
	'mod'          shift, and enter state 126
	'or'           reduce using rule 85
	'then'         reduce using rule 85


State 163

	REXPR8 -> REXPR8 'mod' REXPR9 .                     (rule 87)

	')'            reduce using rule 87
	'*'            reduce using rule 87
	'+'            reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'/'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'<>'           reduce using rule 87
	'='            reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	']'            reduce using rule 87
	'and'          reduce using rule 87
	'do'           reduce using rule 87
	'else'         reduce using rule 87
	'mod'          reduce using rule 87
	'or'           reduce using rule 87
	'then'         reduce using rule 87


State 164

	REXPR12 -> '(' REXPR ')' .                          (rule 100)

	')'            reduce using rule 100
	'*'            reduce using rule 100
	'+'            reduce using rule 100
	','            reduce using rule 100
	'-'            reduce using rule 100
	'/'            reduce using rule 100
	';'            reduce using rule 100
	'<'            reduce using rule 100
	'<='           reduce using rule 100
	'<>'           reduce using rule 100
	'='            reduce using rule 100
	'>'            reduce using rule 100
	'>='           reduce using rule 100
	']'            reduce using rule 100
	'^'            reduce using rule 100
	'and'          reduce using rule 100
	'do'           reduce using rule 100
	'else'         reduce using rule 100
	'mod'          reduce using rule 100
	'or'           reduce using rule 100
	'then'         reduce using rule 100


State 165

	SelStmt -> 'if' REXPR 'then' Stmt .                 (rule 18)
	SelStmt -> 'if' REXPR 'then' Stmt . 'else' Stmt     (rule 19)

	';'            reduce using rule 18
	'else'         shift, and enter state 173
			(reduce using rule 18)



State 166

	REXPR -> REXPR 'or' REXPR1 .                        (rule 66)
	REXPR1 -> REXPR1 . 'and' REXPR2                     (rule 68)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	']'            reduce using rule 66
	'and'          shift, and enter state 137
	'do'           reduce using rule 66
	'else'         reduce using rule 66
	'or'           reduce using rule 66
	'then'         reduce using rule 66


State 167

	BLEXPR -> BLEXPR '[' REXPR ']' .                    (rule 104)

	')'            reduce using rule 104
	'*'            reduce using rule 104
	'+'            reduce using rule 104
	','            reduce using rule 104
	'-'            reduce using rule 104
	'/'            reduce using rule 104
	':='           reduce using rule 104
	';'            reduce using rule 104
	'<'            reduce using rule 104
	'<='           reduce using rule 104
	'<>'           reduce using rule 104
	'='            reduce using rule 104
	'>'            reduce using rule 104
	'>='           reduce using rule 104
	'['            reduce using rule 104
	']'            reduce using rule 104
	'^'            reduce using rule 104
	'and'          reduce using rule 104
	'do'           reduce using rule 104
	'else'         reduce using rule 104
	'mod'          reduce using rule 104
	'or'           reduce using rule 104
	'then'         reduce using rule 104


State 168

	Call -> WriteDefProc '(' REXPR ')' .                (rule 35)

	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'<>'           reduce using rule 35
	'='            reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	']'            reduce using rule 35
	'^'            reduce using rule 35
	'and'          reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'mod'          reduce using rule 35
	'or'           reduce using rule 35
	'then'         reduce using rule 35


State 169

	Call -> ReadDefProc '(' LEXPR ')' .                 (rule 34)

	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'<>'           reduce using rule 34
	'='            reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	']'            reduce using rule 34
	'^'            reduce using rule 34
	'and'          reduce using rule 34
	'do'           reduce using rule 34
	'else'         reduce using rule 34
	'mod'          reduce using rule 34
	'or'           reduce using rule 34
	'then'         reduce using rule 34


State 170

	ListREXPR -> REXPR ',' . ListREXPR                  (rule 38)

	'('            shift, and enter state 93
	')'            reduce using rule 36
	'-'            shift, and enter state 94
	'@'            shift, and enter state 95
	'false'        shift, and enter state 96
	'not'          shift, and enter state 97
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'true'         shift, and enter state 98
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 99
	L_doubl        shift, and enter state 100
	L_integ        shift, and enter state 101
	L_quoted       shift, and enter state 102

	Ident          goto state 26
	Char           goto state 73
	Double         goto state 74
	Integer        goto state 75
	String         goto state 76
	Call           goto state 77
	ListREXPR      goto state 172
	Boolean        goto state 78
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	REXPR          goto state 113
	REXPR1         goto state 80
	REXPR2         goto state 81
	REXPR3         goto state 82
	REXPR4         goto state 83
	REXPR5         goto state 84
	REXPR6         goto state 85
	REXPR7         goto state 86
	REXPR8         goto state 87
	REXPR9         goto state 88
	REXPR10        goto state 89
	REXPR11        goto state 90
	REXPR12        goto state 91
	LEXPR          goto state 92
	BLEXPR         goto state 38

State 171

	Call -> Ident '(' ListREXPR ')' .                   (rule 33)

	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'<>'           reduce using rule 33
	'='            reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	']'            reduce using rule 33
	'^'            reduce using rule 33
	'and'          reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'mod'          reduce using rule 33
	'or'           reduce using rule 33
	'then'         reduce using rule 33


State 172

	ListREXPR -> REXPR ',' ListREXPR .                  (rule 38)

	')'            reduce using rule 38


State 173

	SelStmt -> 'if' REXPR 'then' Stmt 'else' . Stmt     (rule 19)

	'begin'        shift, and enter state 23
	'if'           shift, and enter state 39
	'readChar'     shift, and enter state 40
	'readInt'      shift, and enter state 41
	'readReal'     shift, and enter state 42
	'readString'   shift, and enter state 43
	'while'        shift, and enter state 44
	'writeChar'    shift, and enter state 45
	'writeInt'     shift, and enter state 46
	'writeReal'    shift, and enter state 47
	'writeString'  shift, and enter state 48
	L_Ident        shift, and enter state 2

	Ident          goto state 26
	BEBlock        goto state 27
	Stmt           goto state 178
	SelStmt        goto state 31
	IterStmt       goto state 32
	Call           goto state 34
	ReadDefProc    goto state 35
	WriteDefProc   goto state 36
	LEXPR          goto state 37
	BLEXPR         goto state 38

State 174

	FcBlock -> 'function' Ident Prms ':' Type ';' BEBlock . ';'    (rule 27)

	';'            shift, and enter state 177


State 175

	CompType -> 'array' '[' Integer '..' . Integer ']' 'of' Type    (rule 55)

	L_integ        shift, and enter state 101

	Integer        goto state 176

State 176

	CompType -> 'array' '[' Integer '..' Integer . ']' 'of' Type    (rule 55)

	']'            shift, and enter state 179


State 177

	FcBlock -> 'function' Ident Prms ':' Type ';' BEBlock ';' .    (rule 27)

	'begin'        reduce using rule 27
	'end'          reduce using rule 27
	'function'     reduce using rule 27
	'if'           reduce using rule 27
	'procedure'    reduce using rule 27
	'readChar'     reduce using rule 27
	'readInt'      reduce using rule 27
	'readReal'     reduce using rule 27
	'readString'   reduce using rule 27
	'var'          reduce using rule 27
	'while'        reduce using rule 27
	'writeChar'    reduce using rule 27
	'writeInt'     reduce using rule 27
	'writeReal'    reduce using rule 27
	'writeString'  reduce using rule 27
	L_Ident        reduce using rule 27


State 178

	SelStmt -> 'if' REXPR 'then' Stmt 'else' Stmt .     (rule 19)

	';'            reduce using rule 19
	'else'         reduce using rule 19


State 179

	CompType -> 'array' '[' Integer '..' Integer ']' . 'of' Type    (rule 55)

	'of'           shift, and enter state 180


State 180

	CompType -> 'array' '[' Integer '..' Integer ']' 'of' . Type    (rule 55)

	'^'            shift, and enter state 61
	'array'        shift, and enter state 62
	'boolean'      shift, and enter state 63
	'char'         shift, and enter state 64
	'integer'      shift, and enter state 65
	'real'         shift, and enter state 66
	'string'       shift, and enter state 67

	Type           goto state 181
	BaseType       goto state 59
	CompType       goto state 60

State 181

	CompType -> 'array' '[' Integer '..' Integer ']' 'of' Type .    (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 105
Number of terminals: 59
Number of non-terminals: 49
Number of states: 182
